{"ast":null,"code":"import _defineProperty from \"/home/terence/Documents/medGo/testApp/webmaster-form/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/terence/Documents/medGo/testApp/webmaster-form/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/terence/Documents/medGo/testApp/webmaster-form/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/terence/Documents/medGo/testApp/webmaster-form/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/terence/Documents/medGo/testApp/webmaster-form/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/terence/Documents/medGo/testApp/webmaster-form/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/terence/Documents/medGo/testApp/webmaster-form/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/terence/Documents/medGo/testApp/webmaster-form/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.send = function (event) {\n      if (_this.state.email.length === 0) {\n        return;\n      }\n\n      if (_this.state.password.length === 0) {\n        return;\n      }\n\n      API.login(_this.state.email, _this.state.password).then(function (data) {\n        localStorage.setItem('token', data.data.token);\n        window.location = \"/dashboard\";\n      }, function (error) {\n        console.log(error);\n        return;\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.id, event.target.value));\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.send.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"email\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" Email \"), React.createElement(FormControl, {\n        autoFocus: true,\n        type: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"password\",\n        bsSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \" Password \"), React.createElement(FormControl, {\n        value: this.state.password,\n        onChange: this.handleChange,\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.send,\n        block: true,\n        bsSize: \"large\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Connexion\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/terence/Documents/medGo/testApp/webmaster-form/client/src/App.js"],"names":["React","Component","Button","FormGroup","FormControl","FormLabel","App","props","send","event","state","email","length","password","API","login","then","data","localStorage","setItem","token","window","location","error","console","log","handleChange","setState","target","id","value","bind"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,SAAxC,QAAwD,iBAAxD;AACA,OAAO,WAAP;;IAEMC,G;;;;;AACF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;;AADe,UAUnBC,IAVmB,GAUZ,UAAAC,KAAK,EAAI;AACZ,UAAI,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,KAA4B,CAAhC,EAAmC;AAC/B;AACH;;AACD,UAAI,MAAKF,KAAL,CAAWG,QAAX,CAAoBD,MAApB,KAA+B,CAAnC,EAAsC;AAClC;AACH;;AACDE,MAAAA,GAAG,CAACC,KAAJ,CAAU,MAAKL,KAAL,CAAWC,KAArB,EAA4B,MAAKD,KAAL,CAAWG,QAAvC,EAAiDG,IAAjD,CAAsD,UAAUC,IAAV,EAAgB;AAClEC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,IAAI,CAACA,IAAL,CAAUG,KAAxC;AACAC,QAAAA,MAAM,CAACC,QAAP,GAAkB,YAAlB;AACH,OAHD,EAGG,UAAUC,KAAV,EAAiB;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AACH,OAND;AAOH,KAxBkB;;AAAA,UAyBnBG,YAzBmB,GAyBJ,UAAAjB,KAAK,EAAI;AACpB,YAAKkB,QAAL,qBACKlB,KAAK,CAACmB,MAAN,CAAaC,EADlB,EACuBpB,KAAK,CAACmB,MAAN,CAAaE,KADpC;AAGH,KA7BkB;;AAEf,UAAKpB,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETE,MAAAA,QAAQ,EAAE;AAFD,KAAb;;AAIA,UAAKa,YAAL,CAAkBK,IAAlB;;AACA,UAAKvB,IAAL,CAAUuB,IAAV;;AAPe;AAQlB;;;;6BAuBQ;AACL,aACI;AACJ,QAAA,SAAS,EAAG,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,oBAAE,SAAF;AACJ,QAAA,SAAS,EAAG,OADR;AAEJ,QAAA,MAAM,EAAG,OAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA,oBAAE,SAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHA,EAIA,oBAAE,WAAF;AACJ,QAAA,SAAS,MADL;AAEJ,QAAA,IAAI,EAAG,OAFH;AAGJ,QAAA,KAAK,EAAI,KAAKrB,KAAL,CAAWC,KAHhB;AAIJ,QAAA,QAAQ,EAAI,KAAKe,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJA,CAFA,EAaJ,oBAAE,SAAF;AACA,QAAA,SAAS,EAAG,UADZ;AAEA,QAAA,MAAM,EAAG,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAE,SAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,EAII,oBAAE,WAAF;AACJ,QAAA,KAAK,EAAI,KAAKhB,KAAL,CAAWG,QADhB;AAEJ,QAAA,QAAQ,EAAI,KAAKa,YAFb;AAGJ,QAAA,IAAI,EAAG,UAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAbI,EAsBA,oBAAE,MAAF;AACJ,QAAA,OAAO,EAAI,KAAKlB,IADZ;AAEJ,QAAA,KAAK,MAFD;AAGJ,QAAA,MAAM,EAAG,OAHL;AAIJ,QAAA,IAAI,EAAG,QAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAtBA,CADJ;AAkCH;;;;EAnEaP,S;;AAsElB,eAAeK,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Button, FormGroup, FormControl, FormLabel} from \"react-bootstrap\";\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\"\n        }\n        this.handleChange.bind(this);\n        this.send.bind(this);\n    }\n\n    send = event => {\n        if (this.state.email.length === 0) {\n            return;\n        }\n        if (this.state.password.length === 0) {\n            return;\n        }\n        API.login(this.state.email, this.state.password).then(function (data) {\n            localStorage.setItem('token', data.data.token);\n            window.location = \"/dashboard\"\n        }, function (error) {\n            console.log(error);\n            return;\n        })\n    }\n    handleChange = event => {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            < div\n        className = \"App\" >\n            < FormGroup\n        controlId = \"email\"\n        bsSize = \"large\" >\n            < FormLabel > Email < /FormLabel>\n            < FormControl\n        autoFocus\n        type = \"email\"\n        value = {this.state.email}\n        onChange = {this.handleChange}\n        />\n        < /FormGroup>\n        < FormGroup\n        controlId = \"password\"\n        bsSize = \"large\" >\n            < FormLabel > Password < /FormLabel>\n            < FormControl\n        value = {this.state.password}\n        onChange = {this.handleChange}\n        type = \"password\" / >\n            < /FormGroup>\n            < Button\n        onClick = {this.send}\n        block\n        bsSize = \"large\"\n        type = \"submit\"\n            >\n            Connexion\n            < /Button>\n            < /div>\n    )\n        ;\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}